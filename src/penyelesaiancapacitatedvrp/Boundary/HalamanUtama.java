/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package penyelesaiancapacitatedvrp.Boundary;

import java.io.File;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import penyelesaiancapacitatedvrp.Controller.CWSA_Controller;
import penyelesaiancapacitatedvrp.Controller.DokumenManager;
import penyelesaiancapacitatedvrp.Entity.ModelCWSA;
import penyelesaiancapacitatedvrp.Entity.ModelDataPermintaan;
import penyelesaiancapacitatedvrp.Entity.ModelRuteKendaraan;

/**
 *
 * @author shaff
 */
public class HalamanUtama extends javax.swing.JFrame {
    private ArrayList<ArrayList> dataPermintaanPerMinggu;
    private ArrayList<Double> jarak_rute_perusahaan;
    private ArrayList<ModelRuteKendaraan> ruteKendaraanList;
    
    /**
     * Creates new form MenuUtama
     */
    public HalamanUtama() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        BMuat_data = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tbl_permintaan = new javax.swing.JTable();
        jSlider1 = new javax.swing.JSlider();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tbl_rute = new javax.swing.JTable();
        Jarak_CWSA = new javax.swing.JLabel();
        Jarak_Perusahaan = new javax.swing.JLabel();
        Jarak_CWSA_Perusahaan = new javax.swing.JLabel();
        Rute_Terbaik = new javax.swing.JLabel();
        BPencarian_rute = new javax.swing.JButton();
        Cb_hari = new javax.swing.JComboBox<>();
        Btn_pilih = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Harrington", 0, 24)); // NOI18N
        jLabel1.setText("Clarke Wright Saving Algorithm pada Permasalahan ");

        jLabel2.setFont(new java.awt.Font("Harrington", 0, 24)); // NOI18N
        jLabel2.setText("Capacitated Vehicle Routing Problem");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pencarian Rute Terbaik Kendaraan", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Agency FB", 0, 24))); // NOI18N

        BMuat_data.setText("Memuat Data Permintaan");
        BMuat_data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BMuat_dataActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Permintaan Pelanggan", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 18))); // NOI18N

        Tbl_permintaan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Hari", "Nama Pelanggan", "Lokasi Pelanggan", "Permintaan (Karton)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tbl_permintaan);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 933, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(415, 415, 415))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hasil Perhitungan Rute Terbaik CVRP", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 18))); // NOI18N

        Tbl_rute.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nama Pelanggan", "Jarak (km)", "Permintaan (Karton)", "Kendaraan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Tbl_rute);

        Jarak_CWSA.setText("Jumlah Jarak CWSA : ");

        Jarak_Perusahaan.setText("Jumlah Jarak Perusahaan :");

        Jarak_CWSA_Perusahaan.setText("Selisih Jarak CWSA dan Perusahaan :");

        Rute_Terbaik.setText("Rute Terbaik : ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Jarak_CWSA)
                    .addComponent(Jarak_Perusahaan)
                    .addComponent(Jarak_CWSA_Perusahaan)
                    .addComponent(Rute_Terbaik))
                .addGap(155, 155, 155))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(Jarak_CWSA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Jarak_Perusahaan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Jarak_CWSA_Perusahaan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Rute_Terbaik)))
                .addContainerGap())
        );

        BPencarian_rute.setText("Hitung Pencarian Rute Terbaik CVRP");
        BPencarian_rute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BPencarian_ruteActionPerformed(evt);
            }
        });

        Cb_hari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu" }));

        Btn_pilih.setText("Pilih Data");
        Btn_pilih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_pilihActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BPencarian_rute, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cb_hari, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Btn_pilih, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addComponent(BMuat_data, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BMuat_data, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Btn_pilih, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Cb_hari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BPencarian_rute, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(258, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(84, 84, 84)))
                .addGap(184, 184, 184))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BMuat_dataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BMuat_dataActionPerformed
        // TODO add your handling code here:
        int i,j, baris;
        ModelDataPermintaan dataPermintaan;
        ArrayList<ArrayList> data;
        ArrayList<ModelDataPermintaan> dataPermintaanPerHari;
        
        DokumenManager dokManager = new DokumenManager();
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        
        dataPermintaanPerMinggu = new ArrayList<>();
        
        if(result == JFileChooser.APPROVE_OPTION) {
            String nHari = "Senin";
            int nKode;
            
            File selectedFile = fileChooser.getSelectedFile();
            String FILE_NAME = selectedFile.getAbsolutePath();
            data = dokManager.get_data(FILE_NAME);
            System.out.println("Data yang dimuat : " + selectedFile.getAbsolutePath());
            
            nKode = 0;
            baris = data.size()-1;
            dataPermintaanPerHari = new ArrayList<>();
            
            for(i=0; i<baris; i++){
                if(!data.get(i+1).get(0).toString().equals(nHari)){
                    dataPermintaanPerMinggu.add(dataPermintaanPerHari);
                    dataPermintaanPerHari = new ArrayList<>();
                    nHari = data.get(i+1).get(0).toString();
                    
                    dataPermintaan = new ModelDataPermintaan();
                    dataPermintaan.setNamaCustomer(data.get(i+1).get(1).toString());
                    dataPermintaan.setNamaJalan(data.get(i+1).get(2).toString());
                    dataPermintaan.setKodeJalan(nKode);
                    dataPermintaan.setLatitude(Double.parseDouble(data.get(i+1).get(3).toString()));
                    dataPermintaan.setLongitude(Double.parseDouble(data.get(i+1).get(4).toString()));
                    dataPermintaan.setJumlahPermintaan((int)Double.parseDouble(data.get(i+1).get(5).toString()));

                    dataPermintaanPerHari.add(dataPermintaan);
                    nKode += 1;
                }
                else{            
                    if(i == baris-1){
                        dataPermintaan = new ModelDataPermintaan();
                        dataPermintaan.setNamaCustomer(data.get(i+1).get(1).toString());
                        dataPermintaan.setNamaJalan(data.get(i+1).get(2).toString());
                        dataPermintaan.setKodeJalan(nKode);
                        dataPermintaan.setLatitude(Double.parseDouble(data.get(i+1).get(3).toString()));
                        dataPermintaan.setLongitude(Double.parseDouble(data.get(i+1).get(4).toString()));
                        dataPermintaan.setJumlahPermintaan((int)Double.parseDouble(data.get(i+1).get(5).toString()));

                        dataPermintaanPerHari.add(dataPermintaan);
                        dataPermintaanPerMinggu.add(dataPermintaanPerHari);
                        nKode += 1;
                    }
                    else{
                        dataPermintaan = new ModelDataPermintaan();
                        dataPermintaan.setNamaCustomer(data.get(i+1).get(1).toString());
                        dataPermintaan.setNamaJalan(data.get(i+1).get(2).toString());
                        dataPermintaan.setKodeJalan(nKode);
                        dataPermintaan.setLatitude(Double.parseDouble(data.get(i+1).get(3).toString()));
                        dataPermintaan.setLongitude(Double.parseDouble(data.get(i+1).get(4).toString()));
                        dataPermintaan.setJumlahPermintaan((int)Double.parseDouble(data.get(i+1).get(5).toString()));

                        dataPermintaanPerHari.add(dataPermintaan);
                        nKode += 1;
                    }
                }
            }
            
            DefaultTableModel DataPermintaan_Model = (DefaultTableModel) Tbl_permintaan.getModel();
            String[] row = new String[5];    
            String[] hari = {"Senin","Selasa","Rabu","Kamis","Jumat"};
            
            for(i=Tbl_permintaan.getRowCount()-1; i>=0; i--){
                DataPermintaan_Model.removeRow(i);
            }

            nKode = 1;
            ArrayList<ModelDataPermintaan> dataPermintaanTemp;
            for(i=0; i<dataPermintaanPerMinggu.size(); i++){
                dataPermintaanTemp = dataPermintaanPerMinggu.get(i);
                for(j=0; j<dataPermintaanTemp.size(); j++){
                    row[0] = String.valueOf(nKode);
                    row[1] = hari[i];
                    row[2] = dataPermintaanTemp.get(j).getNamaCustomer();
                    row[3] = dataPermintaanTemp.get(j).getNamaJalan();
                    row[4] = String.valueOf(dataPermintaanTemp.get(j).getJumlahPermintaan());
                    DataPermintaan_Model.addRow(row);
                    
                    nKode += 1;
                }
            }

            JOptionPane.showMessageDialog(null, "Pemuatan data excel berhasil dilakukan.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Pemuatan data gagal dilakukan.");
        }
        
    }//GEN-LAST:event_BMuat_dataActionPerformed

    private void BPencarian_ruteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BPencarian_ruteActionPerformed
        // TODO add your handling code here:
        String[] rute_terbaik = new String[5];
        int i,j;
        int limit = 150;
        int nDataHari;
        double jarak_perusahaan, jarak_cwsa, simpan_jarak, permintaan;
        double[][] m_lokasi_permintaan;
        
        CWSA_Controller cwsa;
        ArrayList<ModelCWSA> cwsaList;
        ArrayList<ModelDataPermintaan> temp;
        ArrayList<ModelDataPermintaan> rute;
        ArrayList<ModelDataPermintaan> ruteSaved;
        ArrayList<ModelDataPermintaan> ruteMobil1;
        ArrayList<ModelDataPermintaan> ruteMobil2;
        ModelDataPermintaan Depot;
        ModelRuteKendaraan ruteKendaraanTemp, ruteKendaraan;
        
        ruteKendaraanList = new ArrayList<>();
        jarak_rute_perusahaan = new ArrayList<>();
        cwsa = new CWSA_Controller();
        
        Depot = new ModelDataPermintaan();
        Depot.setNamaCustomer("Depot");
        Depot.setLongitude(104.692837);
        Depot.setLatitude(-2.931714);
        
        simpan_jarak = 0;
        for(i=0; i<dataPermintaanPerMinggu.size(); i++){
            temp = dataPermintaanPerMinggu.get(i);
            
            jarak_perusahaan = 0;
            permintaan = 0;
            
            for(j=0; j<temp.size(); j++){
                if(j != 0){
                    if(permintaan <= 300){
                        jarak_perusahaan += cwsa.cari_jarak_euclidean(temp.get(j-1), temp.get(j));
                        permintaan += temp.get(j-1).getJumlahPermintaan()+ temp.get(j).getJumlahPermintaan();
                    }
                    else{
                        simpan_jarak += cwsa.cari_jarak_euclidean(temp.get(j-1), temp.get(j));
                        permintaan += temp.get(j-1).getJumlahPermintaan()+ temp.get(j).getJumlahPermintaan();
                    }
                }
                else{
                    if(permintaan <= 300){
                        if(simpan_jarak != 0){
                            jarak_perusahaan += cwsa.cari_jarak_euclidean(Depot, temp.get(j)) + simpan_jarak;
                            permintaan += temp.get(j).getJumlahPermintaan();
                            simpan_jarak = 0;
                        }
                        else{
                            jarak_perusahaan += cwsa.cari_jarak_euclidean(Depot, temp.get(j));
                            permintaan += temp.get(j).getJumlahPermintaan();
                        }
                    }
                }
            }
            
            jarak_rute_perusahaan.add(jarak_perusahaan);
            
            if(i == dataPermintaanPerMinggu.size()-1){
                if(simpan_jarak != 0){
                    jarak_rute_perusahaan.add(simpan_jarak);
                }
            }
        }
        
        for(i=0; i<dataPermintaanPerMinggu.size(); i++){
            ruteSaved = new ArrayList<>();
            nDataHari = dataPermintaanPerMinggu.get(i).size();
            
            m_lokasi_permintaan = cwsa.bentuk_matriks_lokasi_permintaan(dataPermintaanPerMinggu.get(i), Depot);
            cwsaList = cwsa.bentuk_matriks_cwsa(m_lokasi_permintaan, dataPermintaanPerMinggu.get(i));
            rute = cwsa.pengurutan_nilai_penghematan(cwsaList, nDataHari);
            
            if(i != 0){
                ruteSaved = ruteKendaraanList.get(i-1).getRuteAbandoned();
            }
            
            ruteKendaraan = cwsa.pencarian_rute(rute, ruteSaved, limit);
            
            ruteKendaraanList.add(ruteKendaraan);
            
            if(i == dataPermintaanPerMinggu.size()-1){
                ruteSaved = ruteKendaraanList.get(i).getRuteAbandoned();
                if(!ruteSaved.isEmpty()){
                    ruteKendaraan = cwsa.pencarian_rute(ruteSaved, limit);
                    ruteKendaraanList.add(ruteKendaraan);
                }
            }
        }
        
        System.out.println("Proses Pencarian Selesai.");
        DefaultTableModel DataRute_Model = (DefaultTableModel) Tbl_rute.getModel();
        String[] row = new String[5];

        for(i=Tbl_rute.getRowCount()-1; i>=0; i--){
            DataRute_Model.removeRow(i);
        }
        
        ruteMobil1 = ruteKendaraanList.get(0).getRuteMobile1Searched();
        ruteMobil2 = ruteKendaraanList.get(0).getRuteMobile2Searched();
        
        ArrayList<ModelDataPermintaan> dataRuteTemp;
        
        jarak_cwsa = 0;
        for(i=0; i<ruteMobil1.size(); i++){
            row[0] = String.valueOf((i+1));
            row[1] = ruteMobil1.get(i).getNamaCustomer();
            
            if(i != 0){
                row[2] = String.valueOf(cwsa.cari_jarak_euclidean(ruteMobil1.get(i-1), ruteMobil1.get(i)));
                jarak_cwsa += Double.parseDouble(row[2]);
            }
            else{
                row[2] = String.valueOf(cwsa.cari_jarak_euclidean(Depot, ruteMobil1.get(i)));
                jarak_cwsa += Double.parseDouble(row[2]);
            }
            
            row[3] = String.valueOf(ruteMobil1.get(i).getJumlahPermintaan());
            row[4] = "Mobil Pertama";
            
            DataRute_Model.addRow(row);
        }
        
        for(i=0; i<ruteMobil2.size(); i++){
            row[0] = String.valueOf((ruteMobil1.size()+i+1));
            row[1] = ruteMobil2.get(i).getNamaCustomer();
            
            if(i != 0){
                row[2] = String.valueOf(cwsa.cari_jarak_euclidean(ruteMobil2.get(i-1), ruteMobil2.get(i)));
                jarak_cwsa += Double.parseDouble(row[2]);
            }
            else{
                row[2] = String.valueOf(cwsa.cari_jarak_euclidean(Depot, ruteMobil2.get(i)));
                jarak_cwsa += Double.parseDouble(row[2]);
            }
            
            row[3] = String.valueOf(ruteMobil2.get(i).getJumlahPermintaan());
            row[4] = "Mobil Kedua";
            
            DataRute_Model.addRow(row);
        }
        
        double jarakCWSA = Double.parseDouble(String.format("%.2f", jarak_cwsa));
        double jarakPerusahaan = Double.parseDouble(String.format("%.2f", jarak_rute_perusahaan.get(0)));
        
        Jarak_CWSA.setText("Jumlah Jarak CWSA : "+jarakCWSA+" km");
        Jarak_Perusahaan.setText("Jumlah Jarak Perusahaan : "+jarakPerusahaan+" km");
        Jarak_CWSA_Perusahaan.setText("Selisih Jarak CWSA dan Perusahaan : "+Double.parseDouble(String.format("%.2f", Math.abs(jarakCWSA-jarakPerusahaan)))+" km");
        
        if(jarakCWSA < jarakPerusahaan){
            Rute_Terbaik.setText("Rute Terbaik : Rute CWSA");
        }
        else{
            Rute_Terbaik.setText("Rute Terbaik : Rute Perusahaan");
        }
    }//GEN-LAST:event_BPencarian_ruteActionPerformed

    private void Btn_pilihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_pilihActionPerformed
        // TODO add your handling code here:
        int i, kodeHari = 0;
        double jarak_cwsa;
        CWSA_Controller cwsa;
        ModelDataPermintaan Depot;
        ArrayList<ModelDataPermintaan> ruteMobil1;
        ArrayList<ModelDataPermintaan> ruteMobil2;
        
        cwsa = new CWSA_Controller();
        ruteMobil1 = new ArrayList<>();
        ruteMobil2 = new ArrayList<>();
        
        Depot = new ModelDataPermintaan();
        Depot.setNamaCustomer("Depot");
        Depot.setLongitude(104.692837);
        Depot.setLatitude(-2.931714);
        
        switch (Cb_hari.getSelectedItem().toString()) {
            case "Senin":
                kodeHari = 0;
                break;
            case "Selasa":
                kodeHari = 1;
                break;
            case "Rabu":
                kodeHari = 2;
                break;
            case "Kamis":
                kodeHari = 3;
                break;
            case "Jumat":
                kodeHari = 4;
                break;
            case "Sabtu":
                kodeHari = 5;
                break;
            default:
                break;
        }
        
        DefaultTableModel DataRute_Model = (DefaultTableModel) Tbl_rute.getModel();
        String[] row = new String[5];

        for(i=Tbl_rute.getRowCount()-1; i>=0; i--){
            DataRute_Model.removeRow(i);
        }
        
        if(ruteKendaraanList.size() < 6 && kodeHari == 5){
            System.out.println("data permintaan sudah habis");
            return;
        }
        
        ruteMobil1 = ruteKendaraanList.get(kodeHari).getRuteMobile1Searched();
        ruteMobil2 = ruteKendaraanList.get(kodeHari).getRuteMobile2Searched();
        
        ArrayList<ModelDataPermintaan> dataRuteTemp;
        
        jarak_cwsa = 0;
        for(i=0; i<ruteMobil1.size(); i++){
            row[0] = String.valueOf((i+1));
            row[1] = ruteMobil1.get(i).getNamaCustomer();
            
            if(i != 0){
                row[2] = String.valueOf(cwsa.cari_jarak_euclidean(ruteMobil1.get(i-1), ruteMobil1.get(i)));
                jarak_cwsa += Double.parseDouble(row[2]);
            }
            else{
                row[2] = String.valueOf(cwsa.cari_jarak_euclidean(Depot, ruteMobil1.get(i)));
                jarak_cwsa += Double.parseDouble(row[2]);
            }
            
            row[3] = String.valueOf(ruteMobil1.get(i).getJumlahPermintaan());
            row[4] = "Mobil Pertama";
            
            DataRute_Model.addRow(row);
        }
        
        for(i=0; i<ruteMobil2.size(); i++){
            row[0] = String.valueOf((ruteMobil1.size()+i+1));
            row[1] = ruteMobil2.get(i).getNamaCustomer();
            
            if(i != 0){
                row[2] = String.valueOf(cwsa.cari_jarak_euclidean(ruteMobil2.get(i-1), ruteMobil2.get(i)));
                jarak_cwsa += Double.parseDouble(row[2]);
            }
            else{
                row[2] = String.valueOf(cwsa.cari_jarak_euclidean(Depot, ruteMobil2.get(i)));
                jarak_cwsa += Double.parseDouble(row[2]);
            }
            
            row[3] = String.valueOf(ruteMobil2.get(i).getJumlahPermintaan());
            row[4] = "Mobil Kedua";
            
            DataRute_Model.addRow(row);
        }
        
        double jarakCWSA = Double.parseDouble(String.format("%.2f", jarak_cwsa));
        double jarakPerusahaan = Double.parseDouble(String.format("%.2f", jarak_rute_perusahaan.get(kodeHari)));
        
        Jarak_CWSA.setText("Jumlah Jarak CWSA : "+jarakCWSA+" km");
        Jarak_Perusahaan.setText("Jumlah Jarak Perusahaan : "+jarakPerusahaan+" km");
        Jarak_CWSA_Perusahaan.setText("Selisih Jarak CWSA dan Perusahaan : "+Double.parseDouble(String.format("%.2f", Math.abs(jarakCWSA-jarakPerusahaan)))+" km");
        
        if(jarakCWSA < jarakPerusahaan){
            Rute_Terbaik.setText("Rute Terbaik : Rute CWSA");
        }
        else{
            Rute_Terbaik.setText("Rute Terbaik : Rute Perusahaan");
        }
    }//GEN-LAST:event_Btn_pilihActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HalamanUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HalamanUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HalamanUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HalamanUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HalamanUtama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BMuat_data;
    private javax.swing.JButton BPencarian_rute;
    private javax.swing.JButton Btn_pilih;
    private javax.swing.JComboBox<String> Cb_hari;
    private javax.swing.JLabel Jarak_CWSA;
    private javax.swing.JLabel Jarak_CWSA_Perusahaan;
    private javax.swing.JLabel Jarak_Perusahaan;
    private javax.swing.JLabel Rute_Terbaik;
    private javax.swing.JTable Tbl_permintaan;
    private javax.swing.JTable Tbl_rute;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    // End of variables declaration//GEN-END:variables
}
